{"version":3,"sources":["components/Login/loginPage.module.sass","components/UsersPage/usersPage.module.sass","components/Sidebar/sidebar.module.sass","components/Dialogs/dialogs.module.sass","components/Profile/profileInfo/profileInfo.module.sass","components/Header/header.module.css","images/logo.svg","components/Profile/Posts/posts.module.sass","components/MyProfile/MyProfile.module.sass","API/api.js","Redux/authReducer.js","Redux/appReducer.js","Redux/profileReducer.js","Redux/myProfileReducer.js","Redux/dialogsReducer.js","Redux/usersReducer.js","Redux/reduxStore.js","serviceWorker.js","components/Header/header.jsx","components/common/fields/validators.js","components/common/fields/fields.jsx","components/Dialogs/DialogItem/dialogItem.jsx","components/Dialogs/Message/message.jsx","components/Dialogs/dialogs.jsx","hoc/withAuthRedirect.js","components/Profile/Posts/post.jsx","components/Profile/Posts/posts.jsx","components/Profile/Posts/postsContainer.jsx","components/common/Preloader/preloader.jsx","components/Profile/profileInfo/statusNew.jsx","components/Profile/profileInfo/profileInfoCustomization.jsx","components/Profile/profileInfo/profileInfo.jsx","components/Profile/ProfileCover/profileCover.jsx","components/Profile/profile.jsx","components/Dialogs/dialogsContainer.jsx","components/UsersPage/usersPage.jsx","Redux/selectors.js","components/UsersPage/usersPageContainer.jsx","components/Friends/friends.jsx","components/News/news.jsx","components/Login/loginPage.jsx","components/Music/music.jsx","components/Settings/settings.jsx","components/Profile/profileContainer.jsx","components/MyProfile/MyProfile.jsx","components/MyProfile/MyProfileContainer.jsx","components/Header/headerContainer.jsx","App.js","index.js","images/defaultAvatar.svg","components/Profile/ProfileCover/profileCover.module.sass","images/fetching.svg","components/cover.png"],"names":["module","exports","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","status","put","id","delete","post","profile","photo","formData","FormData","append","authAPI","email","password","rememberMe","captcha","initialState","login","isAuth","captchaUrl","setUser","type","appDidMountThunk","dispatch","resultCode","loggedOutThunk","getCaptchaThunk","url","authReducer","state","action","initialized","appReducer","postsData","name","text","likes","setStatus","profileDidMount","getState","profileReducer","newPost","newText","pop","newPostText","myProfile","myStatus","myProfileReducer","dialogsData","dialogsData1","currentDialog","messagesData","id2","message","id3","id4","id5","id7","id8","dialogsReducer","idCount","length","newMessage","abc","key","users","usersAmount","isFetching","setUsers","toggleFetching","usersReduser","map","u","followed","totalCount","reducers","combineReducers","form","formReducer","app","auth","profilePage","dialogsPage","usersPage","store","createStore","applyMiddleware","thunkMiddleware","window","Boolean","location","hostname","match","Header","props","className","to","activeClassName","required","value","Textarea","input","meta","anError","error","touched","Input","DialogItem","dialogsPath","profilePath","css","user","userAvatar","src","ava","alt","userName","active","Message","sass","messageSpan","odd","cloud","ReduxMessageInput","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","onChange","changeValue","validate","messageValue","compose","withRouter","params","dialogs","el","clouds","dialogList","messages","values","sendMessageAC","messageInput","dialog","mapStateToProps","Post","useState","liked","setLiked","item","onClick","Posts","setNewPostText","postsAll","grid","posts__input","e","target","posts__button","addPost","deletePost","postsList","PostsContainer","connect","addPostActionCreator","Preloader","fetchingCircle","Status","editMode","setEditMode","statusInput","onBlur","updateStatus","autoFocus","validation","Contacts","neededKey","s","InfoFormRedux","infoBlock","radio","contactsHeader","contacts","Object","keys","infoBTN","Info","edit","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","coverage","initialValues","updateProfileInfo","ProfileCover","profileHeader","cover","coverImg","Cover","avatar","photos","small","large","Avatar","Profile","DialogsContainerInner","this","setCurrentDialogAC","prevProps","React","Component","DialogsContainer","setDialogsThunk","UsersPage","pagesAmount","Math","ceil","maxLeft","maxRight","setBeginnig","onPageChanged","setLast","pages","i","push","container","pagginationButton","p","userCloud","btn","unfollow","follow","nameStatus","getCaptcha","getIsAuth","getUserId","getUsersAmount","getPageSize","getCurrentPage","getIsFetching","reselector","createSelector","filter","UsersPageContainer","usersPageContainerHasBeenChanged","usersPageContainerDidMount","UsersContainer","uId","items","Friends","News","ReduxLoginForm","loginTip","formContainer","loginForm","grid1","grid2","htmlFor","grid3","loggedInThunk","stopSubmit","_error","Music","Settings","ProfileContainer","undefined","statusRequested","updateProfileInfoThunk","Composed","RedirectComponent","MyProfile","content","myprofile__button_logout","headerName","menu","logOut","forShadow","event","files","console","log","rateing","rateingGrey","rateingColored","MyProfileContainer","myProfileDidMount","App","initializeAppThunk","path","render","AppContainer","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c9c56d7b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"loginPage_container__vGheJ\",\"formContainer\":\"loginPage_formContainer__3Sx0A\",\"loginForm\":\"loginPage_loginForm__3xHNI\",\"grid1\":\"loginPage_grid1__3cWoy\",\"grid2\":\"loginPage_grid2__3r2hf\",\"grid3\":\"loginPage_grid3__1G9aT\",\"radio\":\"loginPage_radio__3yH5H\",\"btn\":\"loginPage_btn__2rEET\",\"error\":\"loginPage_error__8KFWO\",\"input\":\"loginPage_input__1JS-B\",\"captcha\":\"loginPage_captcha__37SHb\",\"loginTip\":\"loginPage_loginTip__2tBUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"usersPage_container__1sU_9\",\"userCloud\":\"usersPage_userCloud__2ha1m\",\"avatar\":\"usersPage_avatar__WdUBN\",\"nameStatus\":\"usersPage_nameStatus__XuhUL\",\"btn\":\"usersPage_btn__QpmAK\",\"pagesAmount\":\"usersPage_pagesAmount__1Wuas\",\"active\":\"usersPage_active__3lX_Z\",\"unfollow\":\"usersPage_unfollow__2j-SY\",\"follow\":\"usersPage_follow__b5V5a\",\"pagginationButton\":\"usersPage_pagginationButton__2Qwsj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"sidebar_item__Kkakv\",\"active\":\"sidebar_active__1urai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__oGB2B\",\"dialogList\":\"dialogs_dialogList__3XssF\",\"active\":\"dialogs_active__2vOKI\",\"user\":\"dialogs_user__2QZC7\",\"userAvatar\":\"dialogs_userAvatar__1bjq1\",\"userName\":\"dialogs_userName__3tYF7\",\"messages\":\"dialogs_messages__3UoPY\",\"message\":\"dialogs_message__1jkdG\",\"odd\":\"dialogs_odd__3zivb\",\"messageSpan\":\"dialogs_messageSpan__3wGWU\",\"containerDialog\":\"dialogs_containerDialog__2Gs2J\",\"dialog\":\"dialogs_dialog__3EZO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverage\":\"profileInfo_coverage__3_8jq\",\"infoBlock\":\"profileInfo_infoBlock__1EAY6\",\"contactsHeader\":\"profileInfo_contactsHeader__1wknp\",\"contacts\":\"profileInfo_contacts__18t6Y\",\"infoBTN1\":\"profileInfo_infoBTN1__3o7fK\",\"infoBTN\":\"profileInfo_infoBTN__OqaJ6\",\"statusInput\":\"profileInfo_statusInput__1RvQa\",\"test\":\"profileInfo_test__2i4oJ\",\"test1\":\"profileInfo_test1__3pZA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"header_headerImg___x12f\",\"login\":\"header_login__1HTqY\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"posts_grid__1E8e9\",\"newPost\":\"posts_newPost__3r6Ul\",\"posts__input\":\"posts_posts__input__1i7aB\",\"posts__button\":\"posts_posts__button__10gPU\",\"postsList\":\"posts_postsList__sKo3V\",\"item\":\"posts_item__3xLYd\",\"name\":\"posts_name__2wRS1\",\"likes\":\"posts_likes__2Wpxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyProfile_content__1aEPx\",\"avatar\":\"MyProfile_avatar__2wTWs\",\"forShadow\":\"MyProfile_forShadow__3zS1x\",\"nameStatus\":\"MyProfile_nameStatus__1OeaG\",\"myprofile__button_logout\":\"MyProfile_myprofile__button_logout__13wqD\",\"menu\":\"MyProfile_menu__37jKI\",\"headerName\":\"MyProfile_headerName__3vwIg\"};","import * as axios from \"axios\";\r\nlet apiKey1 = 'fed53842-a0be-49a9-add1-b5abc1ecc582'\r\n\r\nlet instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": apiKey1\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 3, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then (response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` +userId)\r\n            .then (response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' +userId)\r\n            .then (response => response.data)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put('profile/status/', {status: status})\r\n            .then (response => response.data)\r\n    },\r\n    unfollowAPI(id) {\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    followAPI (id) {\r\n        return instance.post(`follow/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateProfileInfo (profile) {\r\n        return instance.put('profile', profile)\r\n            .then(response => response.data)\r\n    },\r\n    updatePhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo);\r\n        return instance.put('profile/photo', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getMe() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('/auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login')\r\n            .then(response => response.data)\r\n    },\r\n    getCaptcha() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    },\r\n}","import {authAPI} from \"../API/api\";\r\nimport {stopSubmit} from 'redux-form'\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n            }\r\n        case 'SET_CAPTCHA':\r\n            return {\r\n                ...state,\r\n                ...action,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUser = (userId, email, login, isAuth) => ({ type: 'SET_USER', data: {userId, email, login, isAuth} })\r\n\r\nexport const setCaptchaAC = (captchaUrl) => ({type: 'SET_CAPTCHA', captchaUrl})\r\n\r\nexport const appDidMountThunk = () => {\r\n   return (dispatch) => {\r\n        return authAPI.getMe()\r\n            .then (data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch (setUser(id, email, login, true));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const loggedInThunk = (email, password, rememberMe, captcha) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe, captcha)\r\n            .then (data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(appDidMountThunk())\r\n                } else if (data.resultCode === 10) {\r\n                    dispatch(getCaptchaThunk())\r\n                } else {\r\n                    let message = data.messages.length > 0 ? data.messages[0] : 'email or password is wrong';\r\n                    dispatch(stopSubmit('login', {_error: message }));\r\n                }\r\n        })\r\n    }\r\n}\r\n\r\nexport const loggedOutThunk = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout()\r\n            .then (data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch(setUser(null, null, null, false))\r\n                }\r\n        })\r\n    }\r\n}\r\n\r\nexport const getCaptchaThunk = () => {\r\n    return (dispatch) => {\r\n        authAPI.getCaptcha()\r\n            .then (data => {\r\n                dispatch(setCaptchaAC(data.url))\r\n            })\r\n    }\r\n}\r\n\r\nexport default authReducer;","import {appDidMountThunk} from \"./authReducer\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n\r\n}\r\n\r\nexport const setInitializedAC = () => {\r\n    return ({type: 'SET_INITIALIZED'})\r\n}\r\n\r\nexport const initializeAppThunk = () => (dispatch) => {\r\n    let promise = dispatch(appDidMountThunk())\r\n    promise.then (() => {\r\n        dispatch(setInitializedAC())\r\n    })\r\n}\r\n\r\nexport default appReducer\r\n\r\n","import {usersAPI} from \"../API/api\";\r\n\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        {name: 'John', text: 'Its my first post!', likes: 25,},\r\n        {name: 'Ann', text: 'Its a great weather today', likes: 12,},\r\n        {name: 'Drew', text: 'Yo!', likes: 17,},\r\n    ],\r\n/*    newPostText: '',*/\r\n    profile: null,\r\n    status: null,\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD-POST':\r\n            let newPost = {\r\n                name: action.name,\r\n                text: action.newText,\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            }\r\n        case 'DELETE_POST':\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.pop\r\n            }\r\n            /*state.postsData.push(newPost);*/\r\n        case 'UPDATE-NEW-POST-TEXT':\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText,\r\n            }\r\n        case 'SET_PROFILE':\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case 'SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (name, newText) => ({ type: 'ADD-POST', name, newText })\r\nexport const deletePostAC = () => ({type: 'DELETE_POST'})\r\n/*export const updateNewPostTextActionCreator = (newText) =>\r\n    ({ type: 'UPDATE-NEW-POST-TEXT', newText })*/\r\nexport const setProfile = (profile) => ({type: 'SET_PROFILE', profile})\r\nexport const setStatus = (status) => ({type: 'SET_STATUS', status})\r\n\r\nexport const profileDidMount = (userId) => {\r\n    return (dispatch, getState) => {\r\n        usersAPI.getProfile(userId).then(data => {\r\n            dispatch(setProfile(data));\r\n        })\r\n    }\r\n}\r\nexport const statusRequested = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getStatus(userId).then(data => {\r\n            dispatch(setStatus(data));\r\n        })\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        usersAPI.updateStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProfileInfoThunk = (profile) => (dispatch, getState) => {\r\n    usersAPI.updateProfileInfo(profile).then(data => {\r\n        if (data.resultCode === 0) {\r\n            dispatch(profileDidMount(getState().auth.userId))\r\n        }\r\n    })\r\n}\r\n\r\nexport default profileReducer;","import {usersAPI} from \"../API/api\";\r\n\r\n\r\nlet initialState = {\r\n    myProfile: null,\r\n    myStatus: null,\r\n};\r\n\r\nconst myProfileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_MY_PROFILE':\r\n            return {\r\n                ...state,\r\n                myProfile: action.profile,\r\n            }\r\n        case 'SET_MY_STATUS':\r\n            return {\r\n                ...state,\r\n                myStatus: action.status,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setProfile = (profile) => ({type: 'SET_MY_PROFILE', profile})\r\nexport const setStatus = (status) => ({type: 'SET_MY_STATUS', status})\r\n\r\nexport const myProfileDidMount = () => {\r\n    return (dispatch, getState) => {\r\n        usersAPI.getProfile(getState().auth.userId).then(data => {\r\n            dispatch(setProfile(data));\r\n        })\r\n        usersAPI.getStatus(getState().auth.userId).then(data => {\r\n            dispatch(setStatus(data));\r\n        })\r\n    }\r\n}\r\n/*export const statusRequested = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getStatus(userId).then(data => {\r\n            dispatch(setStatus(data));\r\n        })\r\n    }\r\n}*/\r\n/*export const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        usersAPI.updateStatus(status).then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        })\r\n    }\r\n}*/\r\n\r\nexport default myProfileReducer;","import {usersAPI} from \"../API/api\";\r\nimport {setProfile} from \"./profileReducer\";\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 'id5', name: 'essedger'},\r\n        {id: 'id2', name: 'samurai'},\r\n        {id: 'id7', name: 'tinirait'},\r\n        {id: 'id4', name: 'marina'},\r\n        {id: 'id3', name: 'Alexander'},\r\n        {id: 'id8', name: 'Nastya'},\r\n    ],\r\n    dialogsData1: [\r\n        {name: 'John', text: 'Its my first post!', likes: 25,},\r\n    ],\r\n    currentDialog: 'id2',\r\n    messagesData: {\r\n            id2: [\r\n                {id: 1, message: 'Hi!'},\r\n                {id: 2, message: 'How is it going?'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Yo'},\r\n                {id: 5, message: 'Yo'},\r\n            ],\r\n            id3: [\r\n                {id: 1, message: 'Ok, Siri, what is the weather like today?'},\r\n                {id: 2, message: 'Not even funny'},\r\n                {id: 3, message: 'Yo'},\r\n            ],\r\n            id4: [\r\n                {id: 1, message: 'Hello, my friend!'},\r\n                {id: 2, message: 'How are you?'},\r\n                {id: 3, message: 'Im good. And how are you?'},\r\n                {id: 4, message: 'Perfecto mio amico'},\r\n            ],\r\n            id5: [\r\n                {id: 1, message: 'Greetings!'},\r\n                {id: 2, message: 'How is it going?'},\r\n                {id: 3, message: 'Back from Scotland'},\r\n                {id: 4, message: 'Thats incredible!'},\r\n            ],\r\n            id7: [\r\n                {id: 1, message: 'Hello!'},\r\n                {id: 2, message: 'How are you?'},\r\n                {id: 3, message: 'Yo'},\r\n                {id: 4, message: 'Whats up?'},\r\n            ],\r\n            id8: [\r\n                {id: 1, message: 'Konichiva!'},\r\n                {id: 2, message: 'How is it going?'},\r\n                {id: 3, message: 'Namaste'},\r\n                {id: 4, message: 'Namaste'},\r\n                {id: 5, message: 'Namaste'},\r\n            ],\r\n        },\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        /*case 'SEND-MESSAGE':\r\n            let idCount = state.messagesData.id2.length + 1;\r\n            let newMessage = {\r\n                id: idCount,\r\n                message: action.text,\r\n            };\r\n            let abc = [...state.messagesData.id2, newMessage]\r\n            let id2 = abc\r\n            return {\r\n                ...state,\r\n                dialogsData: [...state.dialogsData],\r\n                dialogsData1: [...state.dialogsData1],\r\n                messagesData: {...state.messagesData, id2: abc },\r\n                //id2: [...state.messagesData.id2, newMessage]\r\n            }*/\r\n        case 'SEND-MESSAGE':\r\n            let idCount = state.messagesData[state.currentDialog].length + 1;\r\n            let newMessage = {\r\n                id: idCount,\r\n                message: action.text,\r\n            };\r\n            let abc = [...state.messagesData[state.currentDialog], newMessage]\r\n            let id2 = abc\r\n            for (let key in state.messagesData) {\r\n                if (key == state.currentDialog) {\r\n                    return {\r\n                        ...state,\r\n                        dialogsData: [...state.dialogsData],\r\n                        dialogsData1: [...state.dialogsData1],\r\n                        messagesData: {...state.messagesData, [key]: abc},\r\n                    }\r\n                }\r\n            }\r\n        case 'SET_CURRENT_DIALOG':\r\n            return {\r\n                ...state,\r\n                currentDialog: action.id,\r\n            }\r\n        case 'SET_DIALOGS_DATA':\r\n            return {\r\n                ...state,\r\n                dialogsData1: [...state.dialogsData1, action.profile ],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const sendMessageAC = (text) => ({ type: 'SEND-MESSAGE', text })\r\nexport const setCurrentDialogAC = (id) => ({ type: 'SET_CURRENT_DIALOG', id })\r\nexport const setDialogsDataAC = (profile) => ({type: 'SET_DIALOGS_DATA', profile: profile })\r\n\r\nexport const setDialogsThunk = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId).then(data => {\r\n            dispatch(setDialogsDataAC(data))\r\n        })\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;","import { usersAPI } from \"../API/api\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    usersAmount: 0,\r\n    isFetching: false,\r\n};\r\n\r\nconst usersReduser = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map ( u => {\r\n                    if (u.id === action.id) {\r\n                        return { ...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map ( u => {\r\n                    if (u.id === action.id) {\r\n                        return { ...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'SET_USERS':\r\n            return {\r\n                ...state,\r\n                users: [ ...action.users ]\r\n            }\r\n        case 'SET_CURRENT_PAGE':\r\n            return { ...state, currentPage: action.currentPage }\r\n        case 'SET_USERS_AMOUNT':\r\n            return { ...state, usersAmount: action.totalCount }\r\n        case 'TOGGLE_FETCHING':\r\n            return { ...state, isFetching: action.isFetching}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followAC = (userId) => ({type: 'FOLLOW', id: userId})\r\nexport const unfollowAC = (userId) => ({type: 'UNFOLLOW', id: userId})\r\nexport const setUsers = (users) => ({type: 'SET_USERS', users})\r\nexport const setCurrentPage = (currentPage) => ({type: 'SET_CURRENT_PAGE', currentPage})\r\nexport const setUsersAmount = (totalCount) => ({type: 'SET_USERS_AMOUNT', totalCount})\r\nexport const toggleFetching = (isFetching) => ({type: 'TOGGLE_FETCHING', isFetching})\r\n\r\nexport const usersPageContainerDidMount = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch (toggleFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then (data => {\r\n            dispatch (toggleFetching(false) );\r\n            dispatch (setUsers (data.items) );\r\n            dispatch (setUsersAmount (data.totalCount) );\r\n        })\r\n    }\r\n}\r\nexport const usersPageContainerHasBeenChanged = (p, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch (toggleFetching(true) )\r\n        dispatch (setCurrentPage(p) )\r\n        usersAPI.getUsers(p, pageSize).then (data => {\r\n            dispatch (toggleFetching(false) )\r\n            dispatch (setUsers(data.items) )\r\n        })\r\n    }\r\n}\r\nexport const follow = (uId) => {\r\n    return (dispatch) => {\r\n        usersAPI.followAPI(uId)\r\n            .then (data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch (followAC(uId) )\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (uId) => {\r\n    return (dispatch) => {\r\n        usersAPI.unfollowAPI(uId)\r\n            .then (data => {\r\n                if (data.resultCode === 0) {\r\n                    dispatch (unfollowAC(uId) )\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport default usersReduser;\r\n\r\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\n\r\nimport appReducer from './appReducer'\r\nimport profileReducer from './profileReducer';\r\nimport myProfileReducer from './myProfileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReduser from './usersReducer';\r\nimport authReducer from './authReducer'\r\n\r\nlet reducers = combineReducers ({\r\n    form: formReducer,\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    profilePage: profileReducer,\r\n    myProfile: myProfileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReduser,\r\n})\r\n\r\nlet store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport css from './header.module.css';\r\nimport './header.sass'\r\nimport Logo from './../../images/logo.svg';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nlet Header = (props) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<div className='links'>\r\n\t\t\t\t<div className='item'>\r\n\t\t\t\t\t<NavLink to={'/profile/' +props.userId} activeClassName='active'>Profile</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item'>\r\n\t\t\t\t\t<NavLink to='/userspage' activeClassName='active'>Users</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item'>\r\n\t\t\t\t\t<NavLink to='/dialogs' activeClassName='active'>Messages</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item'>\r\n\t\t\t\t\t<NavLink to='/login' activeClassName='active'>Highlights</NavLink>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/*<div className={css.item}>\r\n\t\t\t\t\t<NavLink to='/friends' activeClassName={css.active}>Friends</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='item'>\r\n\t\t\t\t\t<NavLink to='/login' activeClassName='active'>Login</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={css.item}>\r\n\t\t\t\t\t<NavLink to='/news' activeClassName={css.active}>News</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={css.item}>\r\n\t\t\t\t\t<NavLink to='/music' activeClassName={css.active}>Music</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={css.item}>\r\n\t\t\t\t\t<NavLink to='/settings' activeClassName={css.active}>Settings</NavLink>\r\n\t\t\t\t</div>*/}\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\n{/*<div><button className='header__button'>{props.login}</button></div>*/}\r\n\r\n{/*<NavLink className='buttons' to={'/login'}>\r\n\t\t\t\t\t<button className='header__button'>Login</button>\r\n\t\t\t\t</NavLink>*/}\r\n\r\nexport default Header","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return `field is required`\r\n}\r\n\r\nexport const maxLengthCreator = (nededLength) => (value) => {\r\n    if (value && value.length > nededLength) return `MaxLength is ${nededLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react'\r\nimport './fields.sass'\r\n\r\nexport let Textarea = ({input, meta, ...props}) => {\r\n    let anError = meta.error && meta.touched;\r\n    return(\r\n        <div className= { 'field' + ' ' + (anError ? 'error' : ' ')}>\r\n            <textarea {...input} {...props} />\r\n            {anError && <p>{meta.error}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport let Input = ({input, meta, ...props}) => {\r\n    let anError = meta.error && meta.touched;\r\n    return(\r\n        <div className= { 'field' + ' ' + (anError ? 'error' : ' ')}>\r\n            <input {...input} {...props} />\r\n            {anError && <p>{meta.error}</p>}\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport css from './../dialogs.module.sass'\r\nimport {NavLink} from 'react-router-dom'\r\nimport ava from './../../../images/defaultAvatar.svg'\r\n\r\nconst DialogItem = (props) => {\r\n\tlet dialogsPath='/dialogs/' + props.id\r\n\tlet profilePath='/profile/' + props.id\r\n\treturn (\r\n\t\t<div className={css.user}>\r\n\t\t\t<NavLink className={css.userAvatar} to={profilePath}>\r\n\t\t\t\t<img src={ava} alt=\"userAvatar\"/>\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink className={css.userName} to={dialogsPath} activeClassName={css.active}>\r\n\t\t\t\t<div>{props.name}</div>\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport sass from './../dialogs.module.sass'\r\n\r\nconst Message = (props) => {\r\n\treturn (\r\n\t\t<div className={sass.message}>\r\n\t\t\t<span className={`${sass.messageSpan} \r\n\t\t\t${props.id === 2 && sass.odd} \r\n\t\t\t${props.id > 5 && sass.odd}`}>{props.cloud}</span>\r\n\t\t\t{/*{ + ' id' + props.id}*/}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message","import React, { useState, useEffect } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {required, maxLengthCreator} from '../common/fields/validators'\r\nimport {Textarea} from '../common/fields/fields'\r\nimport css from './dialogs.module.sass'\r\nimport DialogItem from './DialogItem/dialogItem'\r\nimport Message from './Message/message'\r\nimport {authAPI} from \"../../API/api\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport {compose} from 'redux'\r\nimport {sendMessageAC, setDialogsThunk} from \"../../Redux/dialogsReducer\";\r\n\r\nlet MessageInput = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<Field placeholder={'Message'} component={Textarea} onChange={props.changeValue}\r\n\t\t\t\t   name={'messageInput'} validate={[required]} value={props.messageValue} ></Field>\r\n\t\t\t<button>Submit</button>\r\n\t\t</form>\r\n\t)\r\n}\r\nlet ReduxMessageInput = reduxForm ({form: 'dialogInput'}) (MessageInput)\r\n\r\nlet Dialogs = (props) => {\r\n\r\n\tlet userId = props.match.params.userId;\r\n\r\n\tlet dialogs = props.state.dialogsData.map ( el => <DialogItem id={el.id} name={el.name}/>)\r\n\r\n\tlet clouds = null\r\n\tif (userId) {\r\n\t\tclouds = props.state.messagesData[userId].map( el => <Message id={el.id} cloud={el.message}/>)\r\n\t}\r\n\r\n\tconst onSubmitDeclared = (values) => {\r\n\t\tprops.sendMessageAC (values.messageInput)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={css.dialogs}>\r\n\t\t\t<div className={css.dialogList}>\r\n\t\t\t\t{dialogs}\r\n\t\t\t</div>\r\n\t\t\t<div className={css.messages}>\r\n\t\t\t\t<ReduxMessageInput onSubmit={onSubmitDeclared} />\r\n\t\t\t\t<div className={css.dialog}>\r\n\t\t\t\t\t{clouds}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default compose (withRouter) (Dialogs)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToProps) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n","import React, { useState } from 'react'\r\nimport sass from './posts.module.sass'\r\n\r\nlet Post = (props) => {\r\n\r\n\tlet [liked, setLiked] = useState(false)\r\n\r\n\tconst like = () => {\r\n\t\tsetLiked(!liked)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={sass.item}>\r\n\t\t\t<div className={sass.name}>{props.name}</div>\r\n\t\t\t<div className={sass.text}>{props.text}</div>\r\n\t\t\t<div className={sass.likes} onClick={like}>Likes {liked ? props.likes +1 : props.likes}</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport sass from './posts.module.sass'\r\nimport Post from './post'\r\n\r\nlet Posts = (props) => {\r\n\r\n\tlet [newPostText, setNewPostText] = useState('')\r\n\r\n\tlet onPostTextChange = (e) => {\r\n\t\tsetNewPostText (e.target.value)\r\n\t}\r\n\r\n\tlet addPost = () => {\r\n\t\tprops.addPost(props.login, newPostText);\r\n\t\tsetNewPostText ('');\r\n\t}\r\n\r\n\tlet deletePost = () => {\r\n\t\tprops.deletePost();\r\n\t}\r\n\r\n\tlet postsAll = props.profilePage.postsData.map (el => <Post name={el.name} text={el.text} likes={el.likes} />);\r\n\r\n\treturn (\r\n\t<div className={sass.grid}>\r\n\t\t<h2>My posts:</h2>\r\n\t\t<div className={sass.newPost}>\r\n\t\t\t<input className={sass.posts__input} /*ref={ synId }*/\r\n\t\t\t\t   value={ newPostText } onChange={ onPostTextChange } placeholder={`What's going on?`} />\r\n\t\t\t<div className={sass.posts__button} onClick={ addPost }>\r\n\t\t\t\tSubmit\r\n\t\t\t</div>\r\n\t\t\t<div className={sass.posts__button} onClick={props.deletePost}>\r\n\t\t\t\tDelete\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t\t<div className={sass.postsList}>\r\n\t\t\t{postsAll}\r\n\t\t</div>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Posts\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Posts from './posts'\r\nimport {addPostActionCreator, updateNewPostTextActionCreator, deletePostAC} from \"../../../Redux/profileReducer\";\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        login: state.auth.login,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (name, newText) => {\r\n            dispatch ( addPostActionCreator(name, newText) )\r\n        },\r\n        deletePost: () => {\r\n            dispatch (deletePostAC())\r\n        }\r\n\r\n        /*onPostChange: (newText) => {\r\n            dispatch ( updateNewPostTextActionCreator (newText) )\r\n        }*/\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect (mapStateToProps, mapDispatchToProps) (Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\nimport fetchingCircle from \"../../../images/fetching.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={fetchingCircle} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react'\r\nimport {useState} from 'react'\r\nimport sass from './profileInfo.module.sass'\r\n\r\nlet Status = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={sass.statusInput}>\r\n            { editMode\r\n                ? < input className='status_input' placeholder={'Enter your new status'} onBlur={ deactivateEditMode }\r\n                          autoFocus={true} value={status} onChange={ onStatusChange }/>\r\n                : <p className='status_p' onClick={ props.validation && activateEditMode }>{ props.status || `No status here` }</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status;","import React, {useState, setState} from 'react'\r\nimport sass from './profileInfo.module.sass'\r\nimport {Textarea, Input} from '../../common/fields/fields'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport s from \"../../Login/loginPage.module.sass\";\r\nimport {required} from \"../../common/fields/validators\";\r\n\r\nconst InfoForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={sass.infoBlock}>\r\n                <div>\r\n                    <b>Full name: </b>\r\n                    <Field className={s.input} component={Input}\r\n                           name={'fullName'} placeholder={'fullName'}/>\r\n                </div>\r\n                <div>\r\n                    <b>About me: </b>\r\n                    <Field className={s.input} component={Input}\r\n                           name={'aboutMe'} placeholder={'Describe yourself'}/>\r\n                </div>\r\n                <div>\r\n                    <b>In search: </b>\r\n                    <Field className={s.radio} component={Input} name={'lookingForAJob'} type={'checkbox'}/>\r\n                </div>\r\n                <div>\r\n                    <b>My skills: </b>\r\n                    <Field className={s.input} component={Input}\r\n                                             name={'lookingForAJobDescription'} placeholder={'Dedicate your skills'}/>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={sass.contactsHeader}>\r\n                    <b>Contacts: </b>\r\n                </div>\r\n                <div className={sass.contacts}>\r\n                    {Object.keys(props.profile.contacts).map (key =>{\r\n                        return <Contacts key={key} neededKey={key} value={props.profile.contacts[key]} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <div className={sass.infoBTN}>\r\n                <button>save</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Contacts = ({neededKey, value}) => {\r\n    return <div>\r\n        <b>{neededKey}: </b>\r\n        <Field className={s.input} component={Input}\r\n               name={'contacts.' + neededKey} placeholder={neededKey}/>\r\n    </div>\r\n}\r\n\r\nconst InfoFormRedux = reduxForm ({form: 'profileInfo'}) (InfoForm)\r\n\r\nexport default InfoFormRedux","import React, { useState } from 'react'\r\nimport sass from './profileInfo.module.sass'\r\nimport Preloader from \"./../../common/Preloader/preloader\"\r\nimport Status from './statusNew'\r\nimport InfoFormRedux from './profileInfoCustomization'\r\nimport {Field} from \"redux-form\";\r\nimport s from \"../../Login/loginPage.module.sass\";\r\nimport {Input} from \"../../common/fields/fields\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    let edit = () => {\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.updateProfileInfo(formData)\r\n        setEditMode(!editMode)\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={sass.coverage}>\r\n            <Status status={props.status} validation={props.validation} updateStatus={props.updateStatus}/>\r\n\r\n            {props.validation\r\n                ? editMode\r\n                    ? <InfoFormRedux initialValues={props.profile} profile={props.profile}\r\n                                     onSubmit={onSubmit}/>\r\n                    : <Info profile={props.profile} edit={edit} validation={props.validation}/>\r\n                : <Info profile={props.profile} edit={edit}/>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Info = (props) => {\r\n    return (\r\n        <div onClick={props.edit}>\r\n            <div className={sass.infoBlock}>\r\n                <div>\r\n                    <b>Full name: </b><p>{props.profile.fullName}</p>\r\n                </div>\r\n                <div>\r\n                    <b>About me: </b><p>{props.profile.aboutMe}</p>\r\n                </div>\r\n                <div>\r\n                    <b>In search: </b><p>{props.profile.lookingForAJob ? 'yes' : 'no'}</p>\r\n                </div>\r\n                <div>\r\n                    <b>My skills: </b><p>{props.profile.lookingForAJobDescription}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className={sass.contactsHeader}>\r\n                    <b>Contacts: </b>\r\n                </div>\r\n                <div className={sass.contacts}>\r\n                    {Object.keys(props.profile.contacts).map(key => {\r\n                        return <Contacts key={key} neededKey={key} value={props.profile.contacts[key]}/>\r\n                    })}\r\n                </div>\r\n            </div>\r\n            {props.validation &&\r\n            <div className={sass.infoBTN}>\r\n                <button onClick={props.edit}>change</button>\r\n            </div>}\r\n            {props.validation ||\r\n            <div className={sass.infoBTN}>\r\n                <button><NavLink to='/dialogs'>Message {props.profile.fullName}</NavLink></button>\r\n            </div>}\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst Contacts = ({neededKey, value}) => {\r\n    return <div><b>{neededKey}: </b><p>{value}</p></div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react'\r\nimport sass from './profileCover.module.sass'\r\nimport Coverage from \"../../cover.png\";\r\nimport Avatar from \"./../../../images/defaultAvatar.svg\";\r\nimport Cover from \"../../cover.png\";\r\nimport Status from \"../profileInfo/statusNew\";\r\n\r\nlet ProfileCover = (props) => {\r\n    return (\r\n        <div className={sass.profileHeader}>\r\n            <div className={sass.cover}>\r\n                <img className={sass.coverImg} src={Cover} />\r\n            </div>\r\n            <div className={sass.name}>\r\n                <b>{ props.profile.fullName }</b>\r\n            </div>\r\n            <div className={sass.avatar}>\r\n                <img src={props.profile.photos.small  != null ? props.profile.photos.large : Avatar} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCover","import React from 'react';\r\nimport './profile.sass'\r\nimport PostsContainer from './Posts/postsContainer'\r\nimport ProfileInfo from './profileInfo/profileInfo'\r\nimport ProfileCover from \"./ProfileCover/profileCover\";\r\nimport Preloader from \"../common/Preloader/preloader\";\r\n\r\nlet Profile = (props) => {\r\n\tif (!props.profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\treturn (\r\n\t<div className='content'>\r\n\t\t{props.validation || <ProfileCover profile={props.profile}/>}\r\n\t\t<ProfileInfo profile={props.profile} validation={props.validation}\r\n\t\t\t\t\t status={props.status} updateStatus={props.updateStatus} updateProfileInfo={props.updateProfileInfo}/>\r\n\t\t<PostsContainer profile={props.profile} validation={props.validation}/>\r\n\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react';\r\nimport Dialogs from './dialogs';\r\nimport {sendMessageAC} from './../../Redux/dialogsReducer';\r\nimport {updateMessageTextAC, setCurrentDialogAC, setDialogsThunk} from './../../Redux/dialogsReducer';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport Profile from \"../Profile/profile\";\r\n\r\nclass DialogsContainerInner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        this.props.setCurrentDialogAC(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n            let userId = this.props.match.params.userId;\r\n            this.props.setCurrentDialogAC(userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Dialogs {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return { state: state.dialogsPage }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n    //withAuthRedirect,\r\n    withRouter,\r\n    connect (mapStateToProps, {sendMessageAC, setCurrentDialogAC, setDialogsThunk}),\r\n)(DialogsContainerInner)\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport * as axios from 'axios';\r\nimport {NavLink} from 'react-router-dom'\r\nimport css from './usersPage.module.sass'\r\nimport UsersItem from './UserItem/userItem';\r\nimport avatar from './../../images/defaultAvatar.svg'\r\nimport {usersAPI} from './../../API/api.js'\r\n\r\n\r\n\r\nlet UsersPage = (props) => {\r\n\r\n        let pagesAmount = Math.ceil (props.usersAmount / props.pageSize);\r\n\r\n        let maxLeft = props.currentPage - 4;\r\n        let maxRight = props.currentPage + 4;\r\n\r\n        if (maxLeft <= 0) {\r\n            maxLeft = 1;\r\n            maxRight = 9;\r\n        }\r\n        if (maxRight >= pagesAmount) {\r\n            maxLeft = pagesAmount - 8;\r\n            maxRight = pagesAmount;\r\n        }\r\n\r\n        let setBeginnig = () => {\r\n            props.onPageChanged(1)\r\n        }\r\n        let setLast = () => {\r\n            props.onPageChanged(pagesAmount)\r\n        }\r\n\r\n\r\n        let pages = [];\r\n        for ( let i = maxLeft; i <= maxRight; i++){\r\n            pages.push(i);\r\n        };\r\n        return (\r\n            <div className={css.container}>\r\n                <div className={css.pagesAmount}>\r\n                    {props.currentPage > 5 && <span className={css.pagginationButton} onClick={setBeginnig}>&#8592;</span>}\r\n                    { pages.map ( p => {\r\n                        return (\r\n                            <span onClick={ () => {\r\n                                props.onPageChanged(p)}\r\n                            }\r\n                                  className={ `${css.pagginationButton} ${ props.currentPage === p &&  css.active }`}>{'' + p}\r\n                        </span>\r\n                        )\r\n                    })}\r\n                    {props.currentPage < pagesAmount - 4 && <span className={css.pagginationButton} onClick={setLast}>&#8594;</span>}\r\n\r\n                </div>\r\n                { props.users.map(u => <div className={css.userCloud} key={u.id}>\r\n                        <div className={css.avatar}>\r\n                            <NavLink to={'/profile/' +u.id}>\r\n                                <img src={ !u.photos.large ? avatar : u.photos.large} alt=\"avatarPhoto\"/>\r\n                            </NavLink>\r\n                        </div>\r\n                        {u.followed\r\n                            ? <div className={css.btn}>\r\n                                <button className={css.unfollow} onClick={ () => {\r\n                                    props.unfollow(u.id)\r\n                                }}>unfollow</button>\r\n                            </div>\r\n                            : <div className={css.btn}>\r\n                                <button className={css.follow} onClick={ () => {\r\n                                    props.follow(u.id)\r\n                                }}>follow</button>\r\n                            </div>\r\n                        }\r\n                        <div className={css.nameStatus}>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status || 'No status'}</div>\r\n                        </div>\r\n                    </div>)\r\n                }\r\n                <div className={css.pagesAmount}>\r\n                    {props.currentPage > 5 && <span className={css.pagginationButton} onClick={setBeginnig}>&#8592;</span>}\r\n                    { pages.map ( p => {\r\n                        return (\r\n                            <span onClick={ () => {\r\n                                props.onPageChanged(p)}\r\n                            }\r\n                                  className={ `${css.pagginationButton} ${ props.currentPage === p &&  css.active }`}>{'' + p}\r\n                        </span>\r\n                        )\r\n                    })}\r\n                    {props.currentPage < pagesAmount - 4 && <span className={css.pagginationButton} onClick={setLast}>&#8594;</span>}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default UsersPage;","import {createSelector} from 'reselect'\r\n\r\n//selectors\r\n\r\n//login page\r\nexport const getCaptcha = (state) => {\r\n    return state.auth.captchaUrl\r\n}\r\nexport const getIsAuth = (state) => {\r\n    return state.auth.isAuth\r\n}\r\n//profile page\r\nexport const getProfile = (state) => {\r\n     return state.profilePage.profile\r\n}\r\nexport const getStatus = (state) => {\r\n    return state.profilePage.status\r\n}\r\nexport const getUserId = (state) => {\r\n    return state.auth.userId\r\n}\r\n\r\n//header\r\nexport const getLogin = (state) => {\r\n    return state.auth.login\r\n}\r\n\r\n//users page\r\nexport const getUsers = (state) => {\r\n    return state.usersPage.users\r\n}\r\nexport const getUsersAmount = (state) => {\r\n    return state.usersPage.usersAmount\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\n//reselectors\r\nexport const reselector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true)\r\n})\r\n","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport UsersPage from './usersPage'\r\nimport {follow,\r\n        unfollow,\r\n        usersPageContainerDidMount,\r\n        usersPageContainerHasBeenChanged} from './../../Redux/usersReducer'\r\nimport fetchingCircle from './../../images/fetching.svg'\r\nimport * as axios from \"axios\";\r\nimport Preloader from \"../common/Preloader/preloader\";\r\n\r\nimport {getUsers,\r\n        getUsersAmount,\r\n        getPageSize,\r\n        getCurrentPage,\r\n        getIsFetching,\r\n        reselector,} from '../../Redux/selectors'\r\n\r\n\r\nclass UsersPageContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.usersPageContainerDidMount(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (p) => {\r\n        this.props.usersPageContainerHasBeenChanged (p, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Preloader /> : <UsersPage {...this.props} onPageChanged={this.onPageChanged} /> }\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n\r\n    return {\r\n        users: reselector(state),\r\n        usersAmount: getUsersAmount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n    }\r\n}\r\n\r\n\r\n\r\nlet UsersContainer = connect (mapStateToProps, {follow, unfollow, usersPageContainerDidMount, usersPageContainerHasBeenChanged}) (UsersPageContainer);\r\nexport default UsersContainer;\r\n","import React from 'react'\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <p>hello!</p>\r\n    )\r\n}\r\n\r\nexport default Friends","import React from 'react'\r\n\r\nlet News = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tNews\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default News","import React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport s from './loginPage.module.sass'\r\nimport {loggedInThunk} from './../../Redux/authReducer'\r\nimport { connect } from 'react-redux'\r\nimport {required} from '../common/fields/validators'\r\nimport { Input } from '../common/fields/fields'\r\n\r\nimport {getIsAuth,\r\n        getUserId,\r\n        getCaptcha,} from '../../Redux/selectors'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.loginTip}>\r\n                <span><p>Feel free to use collective free login data in case you want to check out SocNet.</p><p>Also feel fre to add or change smth</p></span><br />\r\n                <span><p>Login:</p><p>free@samuraijs.com</p></span><br />\r\n                <span><p>Password:</p><p>free</p></span>\r\n            </div>\r\n            <div className={s.formContainer}>\r\n                <form className={s.loginForm} onSubmit={props.handleSubmit}>\r\n                        <div className={s.grid1}>\r\n                            <h3>Login</h3>\r\n                        </div>\r\n                        <div className={s.grid2}>\r\n                            <div>\r\n                                <Field className={s.input} component={Input} name={'email'}\r\n                                       placeholder={'Enter email'} validate={[required]}/>\r\n                            </div>\r\n                            <div>\r\n                                <Field className={s.input} component={Input} name={'password'}\r\n                                       type='password' placeholder={'Password'} validate={[required]}/>\r\n                            </div>\r\n\r\n                            <div className='loginRadio'>\r\n                                <Field className={s.radio} component={Input} name={'rememberMe'} type={'checkbox'}/>\r\n                                <label htmlFor=\"checkbox\">Remember me</label>\r\n                            </div>\r\n                            {props.captchaUrl\r\n                                ? <div className={s.captcha}>\r\n                                    <div><img src={props.captchaUrl} alt=\"waitForCaptcha\"/></div>\r\n                                    <Field className={s.input} component={Input} name={'captcha'}\r\n                                           placeholder={'Enter symbols'} validate={[required]}/>\r\n                                </div>\r\n                                : null}\r\n                            <div className={s.error}>\r\n                                {props.error}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.grid3}>\r\n                            <button className={s.btn}>Login</button>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Login = (props) => {\r\n   const onSubmit = (formData) => {\r\n       props.loggedInThunk(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile/' + props.userId}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ReduxLoginForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst ReduxLoginForm = reduxForm ({form: 'login'}) (LoginForm)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: getCaptcha(state),\r\n        isAuth: getIsAuth(state),\r\n        userId: getUserId(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {loggedInThunk} )(Login)","import React from 'react' \r\n\r\nlet Music = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tMusic\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Music","import React from 'react' \r\n\r\nlet Settings = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tSettings\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Settings ","import React from 'react'\r\n\r\nimport {compose} from 'redux'\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect, withRouter} from 'react-router-dom'\r\n\r\nimport {usersAPI} from '../../API/api'\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {profileDidMount,\r\n        statusRequested,\r\n        updateStatus,\r\n        updateProfileInfoThunk} from '../../Redux/profileReducer'\r\n\r\nimport Profile from './profile'\r\nimport {getProfile,\r\n        getStatus,\r\n        getUserId,} from '../../Redux/selectors'\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) userId = this.props.userId;\r\n        if (userId == undefined) return <Redirect to={'/login'}/>\r\n        this.props.profileDidMount(userId);\r\n        this.props.statusRequested(userId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n            let userId = this.props.match.params.userId;\r\n            if (!userId) userId = this.props.userId;\r\n            if (userId == undefined) return <Redirect to={'/login'}/>\r\n            this.props.profileDidMount(userId);\r\n            this.props.statusRequested(userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /*внизу передается зис пропс просто на всякий случай. сейчас он тут не нужен*/\r\n            <Profile {...this.props} validation={this.props.match.params.userId == this.props.userId}\r\n                     profile={this.props.profile}\r\n                     updateStatus={this.props.updateStatus}\r\n                     updateProfileInfo={this.props.updateProfileInfoThunk}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n})\r\n\r\nlet Composed = compose (\r\n    connect(mapStateToProps, {profileDidMount, statusRequested, updateStatus, updateProfileInfoThunk}),\r\n    withRouter,\r\n    withAuthRedirect,\r\n) (ProfileContainer)\r\n\r\nexport default Composed\r\n","import React, {useState} from 'react'\r\nimport css from './MyProfile.module.sass'\r\nimport Avatar from \"./../../images/defaultAvatar.svg\"\r\nimport Preloader from \"./../common/Preloader/preloader\"\r\nimport Status from './../Profile/profileInfo/statusNew'\r\nimport {NavLink} from \"react-router-dom\"\r\n\r\nimport {usersAPI} from \"../../API/api\"\r\n\r\nconst MyProfile = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    let onPhotoAdded = (event) => {\r\n        usersAPI.updatePhoto(event.target.files[0])\r\n        console.log(event.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className={css.content}>\r\n            <div className={css.myprofile__button_logout}>\r\n                <div className={css.headerName}>\r\n                    V { props.profile.fullName }\r\n                </div>\r\n                <div className={css.menu}>\r\n                    <NavLink to={'/profile/' +props.profile.userId} ><div>To my profile</div></NavLink>\r\n                    {/*<div onClick={props.logOut}>Logout</div>*/}\r\n                    <NavLink to={'/login'} onClick={props.logOut}><div>Logout</div></NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={css.forShadow}>\r\n                <div className={css.avatar}>\r\n                    <img src={props.profile.photos.large  != null ? props.profile.photos.large : Avatar} />\r\n                </div>\r\n                <div className={css.nameStatus}>\r\n                    <h2>{ props.profile.fullName }</h2>\r\n                    <Status status={props.status} validation={props.validation} updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"file\" onChange={onPhotoAdded}/>\r\n                </div>\r\n                <div className={css.rateing}>\r\n                    <div className={css.rateingGrey}>\r\n                        <div className={css.rateingColored}>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile;","import React from 'react'\r\n\r\nimport { compose } from 'redux'\r\nimport * as axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\nimport { usersAPI } from '../../API/api'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport {myProfileDidMount} from '../../Redux/myProfileReducer'\r\n\r\nimport MyProfile from './MyProfile'\r\nimport {getProfile,\r\n        getStatus,\r\n        getUserId,} from '../../Redux/selectors'\r\nimport {loggedOutThunk} from \"../../Redux/authReducer\";\r\nimport Header from \"../Header/header\";\r\n\r\n\r\n\r\n\r\nclass MyProfileContainer extends React.Component {\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.myProfileDidMount();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /*внизу передается зис пропс просто на всякий случай. сейчас он тут не нужен*/\r\n            <MyProfile profile={this.props.myProfile.myProfile}\r\n                       status={this.props.myProfile.myStatus}\r\n                       logOut={this.props.loggedOutThunk}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    myProfile: state.myProfile,\r\n    userId: state.auth.userId,\r\n})\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {myProfileDidMount, loggedOutThunk}),\r\n    //withRouter,\r\n    //withAuthRedirect,\r\n) (MyProfileContainer)","import React from 'react';\r\nimport * as axios from 'axios'\r\nimport {connect} from 'react-redux'\r\nimport Header from './header'\r\nimport {headerDidMountThunk,\r\n\t\tloggedOutThunk} from './../../Redux/authReducer'\r\nimport {getLogin} from '../../Redux/selectors'\r\n\r\n\r\nconst HeaderContainer = (props) => {\r\n\treturn (\r\n\t\t<Header login={props.login} isAuth={props.isAuth} userId={props.userId} logOut={props.loggedOutThunk}/>\r\n\t)\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tuserId: state.auth.userId,\r\n})\r\n\r\nexport default connect (mapStateToProps, {loggedOutThunk}) (HeaderContainer)","import React from 'react';\nimport './App.sass';\nimport {BrowserRouter,\n\t\tHashRouter,\n\t\tRoute,\n\t\twithRouter} from 'react-router-dom';\nimport {connect, Provider} from 'react-redux';\nimport {compose} from 'redux'\n\nimport Header from './components/Header/header'\nimport Sidebar from './components/Sidebar/sidebar'\nimport DialogsContainer from './components/Dialogs/dialogsContainer'\nimport UsersPageContainer from './components/UsersPage/usersPageContainer'\nimport Friends from './components/Friends/friends'\nimport News from './components/News/news'\nimport Login from './components/Login/loginPage'\nimport Music from './components/Music/music.jsx'\nimport Settings from './components/Settings/settings.jsx'\nimport store from \"./Redux/reduxStore\";\nimport ProfileContainer from \"./components/Profile/profileContainer\";\nimport MyProfileContainer from \"./components/MyProfile/MyProfileContainer.jsx\";\nimport HeaderContainer from \"./components/Header/headerContainer\";\nimport {initializeAppThunk} from \"./Redux/appReducer\";\nimport Preloader from './components/common/Preloader/preloader'\nimport {getUserId,\n\t\tgetIsAuth} from './Redux/selectors'\n\n\nclass App extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.initializeAppThunk();\n\t}\n\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn <Preloader />\n\t\t}\n\t\treturn (\n\t\t\t<HashRouter>\n\t\t\t\t{ this.props.isAuth || <Login /> }\n\t\t\t\t{ this.props.isAuth && <div className='main'>\n\t\t\t\t\t<HeaderContainer />\n\t\t\t\t\t{/*<Sidebar userId={this.props.userId}/>*/}\n\t\t\t\t\t<MyProfileContainer />\n\t\t\t\t\t<div className='mainContent'>\n\t\t\t\t\t\t<Route path='/profile/:userId' render= { () => <ProfileContainer /> }/>\n\t\t\t\t\t\t<Route path='/dialogs/:userId?' render= { () => <DialogsContainer /> }/>\n\t\t\t\t\t\t<Route path='/userspage' render= { () => <UsersPageContainer /> }/>\n\t\t\t\t\t\t<Route path='/friends' render= { () => <Friends /> }/>\n\t\t\t\t\t\t<Route path='/news' render= { () => <News />} />\n\t\t\t\t\t\t<Route path='/music' render= { () => <Music />} />\n\t\t\t\t\t\t<Route path='/settings' render= { () => <Settings />} />\n\t\t\t\t\t\t<Route path='/login' render= { () => <Login />} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>}\n\t\t\t</HashRouter>\n\t\t)\n\t}\n\n}\n\nlet mapStateToProps = (state) => ({\n\tinitialized: state.app.initialized,\n\t/*userId: getUserId(state),*/\n\tisAuth: getIsAuth(state),\n})\n\nconst AppContainer = compose(\n\twithRouter,\n\tconnect (mapStateToProps, {initializeAppThunk})) (App)\n\nconst MainApp = (props) => {\n\treturn <HashRouter>\n\t\t<Provider store={store} >\n\t\t\t<AppContainer />\n\t\t</Provider>\n\t</HashRouter>\n}\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './Redux/reduxStore';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport MainApp from \"./App\";\n\n\n\n\nReactDOM.render( <MainApp />, document.getElementById('root') );\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.adab92f3.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileHeader\":\"profileCover_profileHeader__3B2p9\",\"cover\":\"profileCover_cover__Gn0uW\",\"coverImg\":\"profileCover_coverImg__34sZW\",\"name\":\"profileCover_name__2f2Kz\",\"avatar\":\"profileCover_avatar__3Q4hF\"};","module.exports = __webpack_public_path__ + \"static/media/fetching.315b2175.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.f8b61afe.png\";"],"sourceRoot":""}